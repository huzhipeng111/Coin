package com.huzhipeng.coin.data.api/** * Created by hu on 2017/5/16. */interface API {    companion object {        //http://dapp-t.qlink.mobi/api/        val BASE_URL = "http://dapp-t.qlink.mobi/api/"    //http://47.90.50.172/api/         //http://dapp-t.qlink.mobi/api/   //http://192.168.1.109/api/        val BASE_URL_DEVOLOP = "http://47.90.50.172/api/"        val CONNECT_TIMEOUT = (30 * 1000).toLong()        val IO_TIMEOUT = (60 * 1000).toLong()        /**         * 查询ssid是否注册         * @see API.url_get_ssids         */        @Deprecated("")        val url_get_ssid = "neo/ssId/query.json"        /**         * 查询ssid是否注册         */        val url_get_ssids = "neo/ssId/querys.json"        /**         * 保存ssid         * registerWifiByFee         */        val url_save_ssid = "neo/ssId/registerWifiByFee.json"        /**         * 连接WiFi后调用，在断开WiFi的时候还需要调用另外一个接口         */        val url_record_save = "neo/record/save.json"        /**         * 获取使用历史记录         * @see API.url_record_querys         */        @Deprecated("")        val url_record_query = "neo/record/query.json"        /**         * 获取使用历史记录         */        val url_record_querys = "neo/record/querys.json"        /**         * 创建钱包         */        val url_createWallet = "neo/createWallet.json"        /**         * 导入钱包         */        val url_importWallet = "neo/exportKey.json"        /**         * 获取资产         */        val url_getBalance = "neo/getTokenBalance.json"        /**         * 打赏         */        val url_reward = "neo/wif/ds.json"        /**         * c层需要的数据，通过这个接口拿的         */        val url_c_nodes = "https://nodes.tox.chat/json"        /**         * 获取汇率         */        val url_get_raw = "neo/raw.json"        /**         * neo兑换为qlc         */        val url_neo_exchange_qlc = "neo/neoExchangeQlc.json"        /**         * 交易接口         */        val url_transaction = "neo/transfer.json"        /**         * 注册vpn资产         */        val url_vpn_save = "neo/ssId/registerVpnByFee.json"        /**         * 根据国家获取vpn资产列表接口         */        val url_vpn_query = "neo/vpn/query.json"        val latlngParseCountry = "https://maps.google.com/maps/api/geocode/json"        /**         * 验证vpn名字是否存在         */        val vertify_vpn_name = "neo/validateAssetIsexist.json"        /**         * 保存vpn记录接口         */        val vpn_record_save = "neo/vpn/saveCVpnRecord.json"    }}